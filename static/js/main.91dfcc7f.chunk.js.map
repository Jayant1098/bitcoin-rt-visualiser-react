{"version":3,"sources":["Components/Chart.js","Components/TopBar.js","App.js","index.js"],"names":["Chart","props","style","width","paddingTop","data","labels","hdata","map","name","datasets","Close","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","TopBar","display","justifyContent","Typography","variant","margin","color","currentPrice","App","state","timeTicker","view","dataa","ws","WebSocket","this","ticker","fetchHistoricData","onopen","send","JSON","stringify","type","product_ids","channels","onmessage","evt","message","parse","setInterval","setState","price","IsoDate","Date","time","getHours","getMinutes","oldData","today","fetch24","yesterdayISO","setDate","getDate","start","encodeURIComponent","toISOString","end","url24H","fetch","then","response","json","cl","dat","date","reverse","fetchDays","days","threeDayBack","granularity","getMonth","className","styles","container","ButtonGroup","aria-label","Button","onClick","React","Component","paper","padding","flex","alignItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAGe,SAASA,EAAMC,GAE1B,OACI,yBAAKC,MAAO,CAAEC,MAAO,MAAOC,WAAY,OACxC,kBAAC,IAAD,CACEC,KAAM,CACJC,OAAQL,EAAMM,MAAMC,KAAI,qBAAGC,QAC3BC,SAAU,CACR,CACEL,KAAMJ,EAAMM,MAAMC,KAAI,SAACH,GAAD,OAAUA,EAAKM,SACrCC,MAAO,UACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,uBACjBC,YAAa,qBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,S,aC3BjB,SAASC,EAAO7B,GAC3B,OACI,yBACEC,MAAO,CACL6B,QAAS,OACT5B,MAAO,OACP,mBAAoB,UACpB6B,eAAgB,aAGlB,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKhC,MAAO,CAAEiC,OAAQ,UAAWC,MAAO,SAA5D,eACe,IACZnC,EAAMoC,aACH,IAAMpC,EAAMoC,aACZ,mB,IC6LDC,E,4MAzMbC,MAAQ,CACNF,aAAc,GACdG,YAAY,EACZjC,MAAO,GACPkC,KAAM,G,EAGRC,MAAQ,G,EAGRC,GAAK,IAAIC,UAAU,kC,kEAGjBC,KAAKC,SACLD,KAAKE,sB,+BAGG,IAAD,OACPF,KAAKF,GAAGK,OAAS,WAOf,EAAKL,GAAGM,KAAKC,KAAKC,UAND,CACfC,KAAM,YACNC,YAAa,CAAC,WACdC,SAAU,CAAC,CAAE7C,KAAM,eAMvBoC,KAAKF,GAAGY,UAAY,SAACC,GACnB,IAAMC,EAAUP,KAAKQ,MAAMF,EAAInD,MAC/B,EAAKqC,MAAQe,GAKfE,aACE,kBACE,EAAKC,UAAS,YAA2B,IAAxBrD,EAAuB,EAAvBA,MACf,IADsC,EAAjBiC,WAEnB,MAAO,CAACH,aAAc,EAAKK,MAAMmB,OAGnC,IAAMC,EAAU,IAAIC,KAAK,EAAKrB,MAAMsB,MAC9BA,EAAOF,EAAQG,WAAa,KAAOH,EAAQI,aAAe,GAAK,IAAMJ,EAAQI,aAAcJ,EAAQI,cAC7FC,EAP0B,YAOf5D,GAPe,SActC,MAAO,CAAEA,MANQ,sBACZ4D,GADY,CAEf,CAAExD,MAAO,EAAK+B,MAAMmB,MAAOpD,KAAMuD,KAIN3B,aAAc,EAAKK,MAAMmB,YAE1D,O,0CAIiB,IAAD,OACZO,EAAQ,IAAIL,KAEZM,EAAU,WACd,IAAIC,EAAe,IAAIP,KAAKK,GAC5BE,EAAaC,QAAQH,EAAMI,UAAY,GACvC,IAAMC,EAAQC,mBAAmBJ,EAAaK,eACxCC,EAAMF,mBAAmBN,EAAMO,eAG/BE,EAAM,sEAAkEJ,EAAlE,gBAA+EG,EAA/E,wBAFQ,KAIpBE,MAAMD,GACHE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC1E,GAEL,IAAM6E,EAAK7E,EACRG,KAAI,SAAC2E,GACJ,IAAIC,EAAO,IAAIrB,KAAc,IAAToB,EAAI,IAQxB,MAAO,CAAE1E,KANP2E,EAAKnB,WACL,KACCmB,EAAKlB,aAAe,GACjB,IAAMkB,EAAKlB,aACXkB,EAAKlB,cAEUvD,MAAOwE,EAAI,OAGjCE,UACH,EAAKzB,SAAS,CAAErD,MAAO2E,QAKvBI,EAAY,SAACC,GACjB,IAAIC,EAAe,IAAIzB,KAAKK,GAC5BoB,EAAajB,QAAQH,EAAMI,UAAYe,GACvC,IAAMd,EAAQC,mBAAmBc,EAAab,eACxCC,EAAMF,mBAAmBN,EAAMO,eAC/Bc,EAAcF,EAAO,GAAK,MAAQ,KAClCV,EAAM,sEAAkEJ,EAAlE,gBAA+EG,EAA/E,wBAAkGa,GAE9GX,MAAMD,GACHE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC1E,GACL,IAAM6E,EAAK7E,EACRG,KAAI,SAAC2E,GACJ,IAAIC,EAAO,IAAIrB,KAAc,IAAToB,EAAI,IAWxB,MAAO,CAAE1E,KATP2E,EAAKZ,UACL,IACAY,EAAKM,WACL,IACAN,EAAKnB,WACL,KACCmB,EAAKlB,aAAe,GACjB,IAAMkB,EAAKlB,aACXkB,EAAKlB,cACUvD,MAAOwE,EAAI,OAGjCE,UACH,EAAKzB,SAAS,CAAErD,MAAO2E,QA6B7B,OAAQrC,KAAKN,MAAME,MACjB,KAAK,GACH4B,IACA,MACF,KAAK,EACHiB,EAAU,GACV,MACF,KAAK,GACHA,EAAU,IACV,MACF,KAAK,EAhCLR,MADY,wEAETC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC1E,GACL,IAAM6E,EAAK7E,EACRG,KAAI,SAAC2E,GACJ,IAAIC,EAAO,IAAIrB,KAAc,IAAToB,EAAI,IAQxB,MAAO,CAAE1E,KANP2E,EAAKnB,WACL,KACCmB,EAAKlB,aAAe,GACjB,IAAMkB,EAAKlB,aACXkB,EAAKlB,cAEUvD,MAAOwE,EAAI,OAGjCE,UACH,EAAKzB,SAAS,CAAErD,MAAO2E,OAiBzB,MACF,KAAK,GACHI,EAAU,IACV,MACF,QACEjB,O,+BAMI,IAAD,OACP,OACE,yBAAKsB,UAAU,MAAMzF,MAAO0F,EAAOC,WACjC,kBAAC/D,EAAD,CAAQO,aAAcQ,KAAKN,MAAMF,eACjC,kBAACrC,EAAD,CAAOO,MAAOsC,KAAKN,MAAMhC,QACzB,6BACE,kBAACuF,EAAA,EAAD,CAAa1D,MAAM,YAAY2D,aAAW,kCAAkC7F,MAAO,CAAEiC,OAAQ,OAC3F,kBAAC6D,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKrC,SAAS,CAAEnB,KAAM,KAAM,kBAAM,EAAKM,yBAA9D,OAGA,kBAACiD,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKrC,SAAS,CAAEnB,KAAM,GAAID,YAAY,IAAS,kBAAM,EAAKO,yBAAjF,OAGA,kBAACiD,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKrC,SAAS,CAAEnB,KAAM,EAAGD,YAAY,IAAS,kBAAM,EAAKO,yBAAhF,MAGA,kBAACiD,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKrC,SAAS,CAAEnB,KAAM,GAAID,YAAY,IAAQ,kBAAM,EAAKO,yBAAhF,MAGA,kBAACiD,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKrC,SAAS,CAAEnB,KAAM,EAAGD,YAAY,IAAQ,kBAAM,EAAKO,yBAA/E,c,GAhMMmD,IAAMC,WA8MlBP,EAAS,CACbQ,MAAO,CACLhE,MAAO,UACPjC,MAAO,MACPkG,QAAS,eAEXR,UAAW,CACT9D,QAAS,OACTuE,KAAM,GACNC,WAAY,SACZ,iBAAkB,WCtNtBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.91dfcc7f.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nexport default function Chart(props){    \r\n    \r\n    return(\r\n        <div style={{ width: \"85%\", paddingTop: \"2%\" }}>\r\n        <Line\r\n          data={{\r\n            labels: props.hdata.map(({ name }) => name),\r\n            datasets: [\r\n              {\r\n                data: props.hdata.map((data) => data.Close),\r\n                label: \"BTC-USD\",\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: \"rgba(75,192,192,0.4)\",\r\n                borderColor: \"rgba(75,192,192,1)\",\r\n                borderCapStyle: \"butt\",\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: \"miter\",\r\n                pointBorderColor: \"rgba(75,192,192,1)\",\r\n                pointBackgroundColor: \"#fff\",\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n              },\r\n            ],\r\n          }}\r\n        />\r\n        </div>\r\n    )\r\n        }","import React from 'react'\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function TopBar(props){\r\n    return(\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            \"background-color\": \"#4bc0c0\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" style={{ margin: \"0.7% 1%\", color: \"#FFF\" }}>\r\n            Last Price :{\" \"}\r\n            {props.currentPrice\r\n              ? \"$\" + props.currentPrice\r\n              : \"Fetching Price\"}\r\n          </Typography>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\nimport { ButtonGroup, Button } from \"@material-ui/core\";\nimport Chart from \"./Components/Chart\";\nimport TopBar from './Components/TopBar'\nclass App extends React.Component {\n  state = {\n    currentPrice: \"\",\n    timeTicker: true,\n    hdata: [],\n    view: 1,\n  };\n\n  dataa = [];\n\n  // Establish Connection to Web Socket\n  ws = new WebSocket(\"wss://ws-feed.pro.coinbase.com\");\n\n  componentDidMount() {\n    this.ticker();\n    this.fetchHistoricData();\n  }\n\n  ticker() {\n    this.ws.onopen = () => {\n      const subscibe = {\n        type: \"subscribe\",\n        product_ids: [\"BTC-USD\"],\n        channels: [{ name: \"ticker\" }],\n      };\n      // console.log(\"connected\");\n      this.ws.send(JSON.stringify(subscibe));\n    };\n\n    this.ws.onmessage = (evt) => {\n      const message = JSON.parse(evt.data);\n      this.dataa = message;\n\n      // console.log(message, this.dataa);\n    };\n\n    setInterval(\n      () =>\n        this.setState(({ hdata,timeTicker }) => {\n          if(!timeTicker){\n            return {currentPrice: this.dataa.price}\n          }\n\n          const IsoDate = new Date(this.dataa.time);\n          const time = IsoDate.getHours() + \":\" + (IsoDate.getMinutes() < 10 ? \"0\" + IsoDate.getMinutes(): IsoDate.getMinutes());\n          const [, ...oldData] = hdata;\n          const updatedData = [\n            ...oldData,\n            { Close: this.dataa.price, name: time },\n          ];\n          // console.log(updatedData);\n          // return { dataFromServer: {Close:this.dataa.price,name: time}}\n          return { hdata: updatedData, currentPrice: this.dataa.price };\n        }),\n      5000\n    );\n  }\n\n  fetchHistoricData() {\n    const today = new Date();\n\n    const fetch24 = () => {\n      var yesterdayISO = new Date(today);\n      yesterdayISO.setDate(today.getDate() - 1);\n      const start = encodeURIComponent(yesterdayISO.toISOString());\n      const end = encodeURIComponent(today.toISOString());\n      const granularity = 300;\n      // console.log(end);\n      const url24H = `https://api.pro.coinbase.com/products/BTC-USD/candles?start=${start}&end=${end}&granularity=${granularity}`;\n\n      fetch(url24H)\n        .then((response) => response.json())\n        .then((data) => {\n          // console.log(data);\n          const cl = data\n            .map((dat) => {\n              var date = new Date(dat[0] * 1000);\n              const time =\n                date.getHours() +\n                \":\" +\n                (date.getMinutes() < 10\n                  ? \"0\" + date.getMinutes()\n                  : date.getMinutes());\n              // console.log(date, time);\n              return { name: time, Close: dat[3] };\n              // return {etime:date.getDate().toString() + ' ' + date.getMonth().toString()}\n            })\n            .reverse();\n          this.setState({ hdata: cl });\n          // console.log(etime,close)\n        });\n    };\n\n    const fetchDays = (days) => {\n      var threeDayBack = new Date(today);\n      threeDayBack.setDate(today.getDate() - days);\n      const start = encodeURIComponent(threeDayBack.toISOString());\n      const end = encodeURIComponent(today.toISOString());\n      const granularity = days > 10 ? 21600 : 3600;\n      const url24H = `https://api.pro.coinbase.com/products/BTC-USD/candles?start=${start}&end=${end}&granularity=${granularity}`;\n      \n      fetch(url24H)\n        .then((response) => response.json())\n        .then((data) => {\n          const cl = data\n            .map((dat) => {\n              var date = new Date(dat[0] * 1000);\n              const time =\n                date.getDate() +\n                \"/\" +\n                date.getMonth() +\n                \" \" +\n                date.getHours() +\n                \":\" +\n                (date.getMinutes() < 10\n                  ? \"0\" + date.getMinutes()\n                  : date.getMinutes());\n              return { name: time, Close: dat[3] };\n              // return {etime:date.getDate().toString() + ' ' + date.getMonth().toString()}\n            })\n            .reverse();\n          this.setState({ hdata: cl });\n          // console.log(etime,close)\n        });\n    };\n\n    const fetchhourly = () => {\n      const url24H = `https://api.pro.coinbase.com/products/BTC-USD/candles?granularity=60`;\n      fetch(url24H)\n        .then((response) => response.json())\n        .then((data) => {\n          const cl = data\n            .map((dat) => {\n              var date = new Date(dat[0] * 1000);\n              const time =\n                date.getHours() +\n                \":\" +\n                (date.getMinutes() < 10\n                  ? \"0\" + date.getMinutes()\n                  : date.getMinutes());\n              // console.log(date, time);\n              return { name: time, Close: dat[3] };\n              // return {etime:date.getDate().toString() + ' ' + date.getMonth().toString()}\n            })\n            .reverse();\n          this.setState({ hdata: cl });\n          // console.log(etime,close)\n        });\n    };\n\n    switch (this.state.view) {\n      case 24:\n        fetch24();\n        break;\n      case 5:\n        fetchDays(5);\n        break;\n      case 10:\n        fetchDays(10);\n        break;\n      case 1:\n        fetchhourly();\n        break;\n      case 30:\n        fetchDays(30);\n        break;\n      default:\n        fetch24();\n    }\n    // fetchDays(10)\n    // console.log(encodeURIComponent(yesterdayISO.toISOString()),'fafsdfasf')\n  }\n\n  render() {\n    return (\n      <div className=\"App\" style={styles.container}>\n        <TopBar currentPrice={this.state.currentPrice}/>\n        <Chart hdata={this.state.hdata} />\n        <div>\n          <ButtonGroup color=\"secondary\" aria-label=\"outlined secondary button group\" style={{ margin: \"5%\" }}>\n            <Button onClick={() => this.setState({ view: 30 }, () => this.fetchHistoricData())}>\n            30D\n            </Button>\n            <Button onClick={() => this.setState({ view: 10, timeTicker: false }, () => this.fetchHistoricData())}>\n              10D\n            </Button>\n            <Button onClick={() => this.setState({ view: 5, timeTicker: false }, () => this.fetchHistoricData())}>\n              5D\n            </Button>\n            <Button onClick={() => this.setState({ view: 24, timeTicker: true }, () => this.fetchHistoricData())}>\n              1D\n            </Button>\n            <Button onClick={() => this.setState({ view: 1, timeTicker: true }, () => this.fetchHistoricData())}>\n              5hr\n            </Button>\n          </ButtonGroup>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// 3CVLkyC6ihuBJOo2\n//\nconst styles = {\n  paper: {\n    color: \"#f50057\",\n    width: \"25%\",\n    padding: \"2% 3% 4% 1%\",\n  },\n  container: {\n    display: \"flex\",\n    flex: 0.7,\n    alignItems: \"center\",\n    \"flex-direction\": \"column\",\n  },\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}